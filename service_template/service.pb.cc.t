// Generated By protoc-gen-service Do not Edit
#include <stdint.h>
#include "public/log_interface.h"
#include "public/net_interface.h"
#include "{file_name}_{platform_name}_service.pb.h"

{class_name}::{class_name}(ILog* log, INet *net, uint32_t bufferSize) : m_log(log), m_net(net)
{{
    m_bufferSize = 0;
    m_tempBuffer = malloc(bufferSize);
    if (m_tempBuffer == NULL)
    {{
        m_log->error("alloc temp buffer failed.");
        return;
    }}
    m_bufferSize = bufferSize;
}}

{class_name}::~{class_name}()
{{
    if (m_tempBuffer)
    {{
        free(m_tempBuffer);
        m_tempBuffer = NULL;
        m_bufferSize = 0;
    }}
}}

void {class_name}::onMessage(uint32_t peerId, void *data, uint32_t size)
{{
    uint16_t messageType = *(uint16_t*)data;
    uint16_t sn = *(((uint16_t*)data) + 1);
    uint8_t* messageData = (uint8_t*)data + sizeof(uint16_t) * 2;
    switch(messageType)
    {{
{message_dispatch_region}
    default:
    m_log->error("message type: %u invalid", messageType);
    break;
    }}
}}

{on_func_region}
{do_func_region}
bool {class_name}::sendMsg(uint32_t peerId, uint16_t msgType, uint16_t sn, const ::google::protobuf::Message *message)
{{
    uint32_t packSize = sizeof(uint16_t) * 2 + message->ByteSizeLong();
    if (packSize > m_bufferSize) return false;
    *(uint16_t*)m_tempBuffer = msgType;
    *((uint16_t*)m_tempBuffer + 1) = sn;
    message->SerializeToArray((void*)((uint8_t*)m_tempBuffer + sizeof(uint16_t) * 2), packSize);
    m_net->send(peerId, m_tempBuffer, packSize);
}}

